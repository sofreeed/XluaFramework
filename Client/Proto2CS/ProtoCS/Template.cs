// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: template.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtoCS {

  /// <summary>Holder for reflection information generated from template.proto</summary>
  public static partial class TemplateReflection {

    #region Descriptor
    /// <summary>File descriptor for template.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TemplateReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg50ZW1wbGF0ZS5wcm90bxIHUHJvdG9DUyKrAgoLTXNnVGVtcGxhdGUSCQoB",
            "YhgBIAEoCBILCgNzdHIYAiABKAkSCQoBZhgDIAEoAhIJCgFkGAQgASgBEg0K",
            "BWJ5dGVzGAUgASgMEgwKBGlfMzIYCyABKAUSDgoGdV9pXzMyGAwgASgNEgwK",
            "BGlfNjQYDiABKAMSDgoGdV9pXzY0GA8gASgEEg8KB3N0cmxpc3QYHyADKAkS",
            "NgoJc3RyaW5nbWFwGCAgAygLMiMuUHJvdG9DUy5Nc2dUZW1wbGF0ZS5TdHJp",
            "bmdtYXBFbnRyeRIoCgllbnVtRmllbGQYISABKA4yFS5Qcm90b0NTLkVudW1U",
            "ZW1wbGF0ZRowCg5TdHJpbmdtYXBFbnRyeRILCgNrZXkYASABKAkSDQoFdmFs",
            "dWUYAiABKAU6AjgBKikKDEVudW1UZW1wbGF0ZRIHCgNBQUEQABIHCgNCQkIQ",
            "ARIHCgNDQ0MQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ProtoCS.EnumTemplate), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoCS.MsgTemplate), global::ProtoCS.MsgTemplate.Parser, new[]{ "B", "Str", "F", "D", "Bytes", "I32", "UI32", "I64", "UI64", "Strlist", "Stringmap", "EnumField" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum EnumTemplate {
    /// <summary>
    ///Proto3枚举必须有一个0值，0值是第一个元素以便和Proto2兼容
    /// </summary>
    [pbr::OriginalName("AAA")] Aaa = 0,
    [pbr::OriginalName("BBB")] Bbb = 1,
    [pbr::OriginalName("CCC")] Ccc = 2,
  }

  #endregion

  #region Messages
  public sealed partial class MsgTemplate : pb::IMessage<MsgTemplate> {
    private static readonly pb::MessageParser<MsgTemplate> _parser = new pb::MessageParser<MsgTemplate>(() => new MsgTemplate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MsgTemplate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoCS.TemplateReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgTemplate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgTemplate(MsgTemplate other) : this() {
      b_ = other.b_;
      str_ = other.str_;
      f_ = other.f_;
      d_ = other.d_;
      bytes_ = other.bytes_;
      i32_ = other.i32_;
      uI32_ = other.uI32_;
      i64_ = other.i64_;
      uI64_ = other.uI64_;
      strlist_ = other.strlist_.Clone();
      stringmap_ = other.stringmap_.Clone();
      enumField_ = other.enumField_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgTemplate Clone() {
      return new MsgTemplate(this);
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 1;
    private bool b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 2;
    private string str_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Str {
      get { return str_; }
      set {
        str_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "f" field.</summary>
    public const int FFieldNumber = 3;
    private float f_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float F {
      get { return f_; }
      set {
        f_ = value;
      }
    }

    /// <summary>Field number for the "d" field.</summary>
    public const int DFieldNumber = 4;
    private double d_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double D {
      get { return d_; }
      set {
        d_ = value;
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 5;
    private pb::ByteString bytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes {
      get { return bytes_; }
      set {
        bytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "i_32" field.</summary>
    public const int I32FieldNumber = 11;
    private int i32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int I32 {
      get { return i32_; }
      set {
        i32_ = value;
      }
    }

    /// <summary>Field number for the "u_i_32" field.</summary>
    public const int UI32FieldNumber = 12;
    private uint uI32_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UI32 {
      get { return uI32_; }
      set {
        uI32_ = value;
      }
    }

    /// <summary>Field number for the "i_64" field.</summary>
    public const int I64FieldNumber = 14;
    private long i64_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long I64 {
      get { return i64_; }
      set {
        i64_ = value;
      }
    }

    /// <summary>Field number for the "u_i_64" field.</summary>
    public const int UI64FieldNumber = 15;
    private ulong uI64_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UI64 {
      get { return uI64_; }
      set {
        uI64_ = value;
      }
    }

    /// <summary>Field number for the "strlist" field.</summary>
    public const int StrlistFieldNumber = 31;
    private static readonly pb::FieldCodec<string> _repeated_strlist_codec
        = pb::FieldCodec.ForString(250);
    private readonly pbc::RepeatedField<string> strlist_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Strlist {
      get { return strlist_; }
    }

    /// <summary>Field number for the "stringmap" field.</summary>
    public const int StringmapFieldNumber = 32;
    private static readonly pbc::MapField<string, int>.Codec _map_stringmap_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt32(16), 258);
    private readonly pbc::MapField<string, int> stringmap_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> Stringmap {
      get { return stringmap_; }
    }

    /// <summary>Field number for the "enumField" field.</summary>
    public const int EnumFieldFieldNumber = 33;
    private global::ProtoCS.EnumTemplate enumField_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoCS.EnumTemplate EnumField {
      get { return enumField_; }
      set {
        enumField_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MsgTemplate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MsgTemplate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (B != other.B) return false;
      if (Str != other.Str) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(F, other.F)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(D, other.D)) return false;
      if (Bytes != other.Bytes) return false;
      if (I32 != other.I32) return false;
      if (UI32 != other.UI32) return false;
      if (I64 != other.I64) return false;
      if (UI64 != other.UI64) return false;
      if(!strlist_.Equals(other.strlist_)) return false;
      if (!Stringmap.Equals(other.Stringmap)) return false;
      if (EnumField != other.EnumField) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (B != false) hash ^= B.GetHashCode();
      if (Str.Length != 0) hash ^= Str.GetHashCode();
      if (F != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(F);
      if (D != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(D);
      if (Bytes.Length != 0) hash ^= Bytes.GetHashCode();
      if (I32 != 0) hash ^= I32.GetHashCode();
      if (UI32 != 0) hash ^= UI32.GetHashCode();
      if (I64 != 0L) hash ^= I64.GetHashCode();
      if (UI64 != 0UL) hash ^= UI64.GetHashCode();
      hash ^= strlist_.GetHashCode();
      hash ^= Stringmap.GetHashCode();
      if (EnumField != 0) hash ^= EnumField.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (B != false) {
        output.WriteRawTag(8);
        output.WriteBool(B);
      }
      if (Str.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Str);
      }
      if (F != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(F);
      }
      if (D != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(D);
      }
      if (Bytes.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Bytes);
      }
      if (I32 != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(I32);
      }
      if (UI32 != 0) {
        output.WriteRawTag(96);
        output.WriteUInt32(UI32);
      }
      if (I64 != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(I64);
      }
      if (UI64 != 0UL) {
        output.WriteRawTag(120);
        output.WriteUInt64(UI64);
      }
      strlist_.WriteTo(output, _repeated_strlist_codec);
      stringmap_.WriteTo(output, _map_stringmap_codec);
      if (EnumField != 0) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) EnumField);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (B != false) {
        size += 1 + 1;
      }
      if (Str.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Str);
      }
      if (F != 0F) {
        size += 1 + 4;
      }
      if (D != 0D) {
        size += 1 + 8;
      }
      if (Bytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytes);
      }
      if (I32 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(I32);
      }
      if (UI32 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UI32);
      }
      if (I64 != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(I64);
      }
      if (UI64 != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UI64);
      }
      size += strlist_.CalculateSize(_repeated_strlist_codec);
      size += stringmap_.CalculateSize(_map_stringmap_codec);
      if (EnumField != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) EnumField);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MsgTemplate other) {
      if (other == null) {
        return;
      }
      if (other.B != false) {
        B = other.B;
      }
      if (other.Str.Length != 0) {
        Str = other.Str;
      }
      if (other.F != 0F) {
        F = other.F;
      }
      if (other.D != 0D) {
        D = other.D;
      }
      if (other.Bytes.Length != 0) {
        Bytes = other.Bytes;
      }
      if (other.I32 != 0) {
        I32 = other.I32;
      }
      if (other.UI32 != 0) {
        UI32 = other.UI32;
      }
      if (other.I64 != 0L) {
        I64 = other.I64;
      }
      if (other.UI64 != 0UL) {
        UI64 = other.UI64;
      }
      strlist_.Add(other.strlist_);
      stringmap_.Add(other.stringmap_);
      if (other.EnumField != 0) {
        EnumField = other.EnumField;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            B = input.ReadBool();
            break;
          }
          case 18: {
            Str = input.ReadString();
            break;
          }
          case 29: {
            F = input.ReadFloat();
            break;
          }
          case 33: {
            D = input.ReadDouble();
            break;
          }
          case 42: {
            Bytes = input.ReadBytes();
            break;
          }
          case 88: {
            I32 = input.ReadInt32();
            break;
          }
          case 96: {
            UI32 = input.ReadUInt32();
            break;
          }
          case 112: {
            I64 = input.ReadInt64();
            break;
          }
          case 120: {
            UI64 = input.ReadUInt64();
            break;
          }
          case 250: {
            strlist_.AddEntriesFrom(input, _repeated_strlist_codec);
            break;
          }
          case 258: {
            stringmap_.AddEntriesFrom(input, _map_stringmap_codec);
            break;
          }
          case 264: {
            EnumField = (global::ProtoCS.EnumTemplate) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
